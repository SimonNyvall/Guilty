<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        z9gczNiapQAAAABJRU5ErkJggg==
</value>
  </data>
</root>